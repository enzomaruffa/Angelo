//
//  LSystemElementTransition.swift
//  
//
//  Created by Enzo Maruffa Moreira on 24/12/20.
//

import Foundation


/// A struct that defines how the parameters from an input element translate into the parameters for an output element
public struct LSystemParametersTransition {
    
    /// The input element this transition applies to
    public let input: String
    
    /// The output element this transition applies to
    public let output: String
    
    /// A function that specify how the parameters are transformed for an input into an output
    public let transition: ([String: Any]?) -> ([String: Any])
    
    /// Creates a `LSystemParametersTransition`
    /// - Parameters:
    ///   - input: The input element this transition applies to
    ///   - output: The output element this transition applies to
    ///   - transition: A function that specify how the parameters are transformed for an input into an output
    public init(input: String,
                output: String,
                transition: @escaping ([String: Any]?) -> ([String: Any])) {
        self.input = input
        self.output = output
        self.transition = transition
    }
    
    /// Checks if a transition is valid given an input and output
    /// - Parameters:
    ///   - input: The input to compare to
    ///   - output: The output to compare to
    /// - Returns: A `Bool` that if true means the transition is valid
    public func isValid(forInput input: String, output: String) -> Bool {
        return input == self.input
            && output == self.output
    }
    
    /// Performs a transition of an `inputElement` into an output
    /// - Parameter inputElement: The `inputElement` to use in the transition
    /// - Returns: The output generated by the transition
    public func performTransition(inputElement: LSystemElement) -> LSystemElement {
        let newParameters = transition(inputElement.parameters)
        return LSystemElement(output, parameters: newParameters)
    }
}
